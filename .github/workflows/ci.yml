name: CI

on:
  push:
    paths-ignore:
      - Docs/**
      - README.md
  pull_request:
    paths-ignore:
      - Docs/**
      - README.md

env:
  DEVELOPER_DIR: /Applications/Xcode_11.6.app/Contents/Developer

jobs:
  test:
    runs-on: macOS-latest
    env:
      MINT_PATH: mint/lib
      MINT_LINK_PATH: mint/bin

    steps:
    - uses: actions/checkout@v2

    - name: Cache Gems
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-

    - name: Bundle install
      run: bundle config path vendor/bundle

    - name: Install Mint
      run: brew install mint

    - name: Cache Mint packages
      uses: actions/cache@v2
      with:
        path: mint
        key: ${{ runner.os }}-mint-${{ hashFiles('**/Mintfile') }}
        restore-keys: |
          ${{ runner.os }}-mint-

    # プロジェクトファイルの生成
    - name: Generate Xcode project with XcodeGen
      run: mint run xcodegen xcodegen generate

    # ビルド
    - name: Xcode build
      run: set -o pipefail && xcodebuild build-for-testing -project Template.xcodeproj -scheme Template -destination 'generic/platform=iOS Simulator' ENABLE_TESTABILITY=YES | bundle exec xcpretty

    # 単体テストの実行
    - name: Xcode test
      run: set -o pipefail && xcodebuild test-without-building -project Template.xcodeproj -scheme TemplateTests RECORD_MODE_ENV=true -destination 'name=iPhone X,OS=13.6' -only-testing:TemplateTests | bundle exec xcpretty

    # コードカバレッジの出力
    - name: Convert Code coverage to HTML
      run: bundle exec slather coverage --html --output-directory html_report

    # テスト結果のアップロード
    - uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: build/reports

    # コードカバレッジのアップロード
    - uses: actions/upload-artifact@v2
      with:
        name: test-coverage
        path: html_report